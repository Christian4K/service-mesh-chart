
{{- $defaults:= .Values.defaults}}

{{- /**** Create a single VirtualService for all external service routes ****/}}
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {{ .Release.Name }}-external-routes
  namespace: {{ .Release.Namespace }}
spec:
  hosts:
{{- range .Values.hosts }}
  - {{ . | quote }}
{{- end }}
  gateways:
  - {{ required "A valid .Values.gateway entry required!" .Values.gateway }}

  http:
{{- range $key, $value := .Values.routes }}
{{- with $value }}

{{- /* Store all values at the service level
       plus a few specific values, and merge in defaults */}}
{{- $serviceValues := (dict 
    "serviceName" (required "service required" $key)
    "namespace" (default $.Release.Namespace .namespace)
    "releaseName" $.Release.Name
 ) | mustMergeOverwrite ((. | deepCopy) | mustMergeOverwrite ($defaults | deepCopy)) }} 

{{- range .versions }}

{{- /* Use dictionary merge to override version-specific settings and pull in service values */}}
{{- $versionValues := (. | deepCopy) | mustMergeOverwrite ($serviceValues | deepCopy) }} 

{{- if not $versionValues.internalOnly }}
{{- include "platform-site.externalRoute" $versionValues }}
{{- end }} {{- /* internal only */ -}}
{{- end }} {{- /* end range versions */ -}}
{{- end }} {{- /* end with route value */ -}}
{{- end }} {{- /* end range routes */ -}}

{{- /**** For Each route create separate internal virtual service and destination rule ****/}}

{{- range $key, $value := .Values.routes }}
{{- with $value }}

{{- /* Store all values at the service level
       plus a few specific values, and merge in defaults */}}
{{- $serviceValues := (dict 
    "serviceName" $key
    "namespace" (default $.Release.Namespace .namespace)
    "releaseName" $.Release.Name
 ) | mustMergeOverwrite ((. | deepCopy) | mustMergeOverwrite ($defaults | deepCopy)) }} 

{{- include "platform-site.internalVirtualService" $serviceValues -}}

{{- include "platform-site.destinationRule" $serviceValues -}}

{{- end }} {{- /* end with route value */ -}}
{{- end }} {{- /* end range routes */ -}}