
{{- /* $sourcesArgs := (dict "versionSource" .Values "serviceSource" .Values "defaultSource" .Values.defaults "Template" $.Template) }}
settings: {{ include "platform-site.getValueFromSources" (dict "valueName" ".retries.settings" | mustMergeOverwrite $sourcesArgs) }}

sourceBool: {{ include "platform-site.getValueFromSources" (dict "valueName" ".rewriteUrlPrefix.enabled" | mustMergeOverwrite $sourcesArgs) }}

direct: {{ printf "%t" .Values.defaults.retries.settings }}
tpl: 
  {{ (tpl "{{ .Values.defaults.retries.settings | toYaml }}" . ) }}

{{ $test := (tpl "{{ .Values.defaults.retries.settings | toYaml }}" . )}}
{{ if $test }}test: true
{{ end */}}


{{- /*
# sourceBool: {{ include "platform-site.getBoolFromSources" (dict "valueName" ".rewriteUrlPrefix.enabled" | mustMergeOverwrite $sourcesArgs) }}

# enabledP: {{ include "platform-site.isComponentEnabled" (dict "componentName" "testurl" | merge $sourcesArgs) }}
# sourceValue: {{ include "platform-site.getSourceValue" (dict "source" .Values.defaults "valueName" ".retries.enabled" | merge $sourcesArgs) }}
# sourceValue: {{ include "platform-site.getSourceValue" (dict "source" .Values.defaults "valueName" ".retries.settings.attempts" | mustMergeOverwrite $sourcesArgs) }}

# $enabled := isEnabled (dict componentName "testurl" version .version service .service default .default)

*/}}