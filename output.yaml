---
# Source: example-consumer/charts/platform-service/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: httpbin


---
# Source: example-consumer/charts/platform-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: httpbin
  labels:
    app.kubernetes.io/name: httpbin
    helm.sh/chart: platform-service-0.15.01
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Tiller
spec:
  type: 
  ports:
    - port: 8000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: httpbin
    app: httpbin

---
# Source: example-consumer/charts/platform-service/templates/deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: release-name-httpbin
  labels:
    app.kubernetes.io/name: httpbin
    helm.sh/chart: platform-service-0.15.01
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Tiller
    app: httpbin
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: httpbin
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: httpbin
        app.kubernetes.io/instance: release-name
        app: httpbin
        version: v1
      annotations:
    spec:
      serviceAccountName: httpbin
      imagePullSecrets:
        - name: 
      initContainers:
      containers:
        - name: httpbin
          image: "kennethreitz/httpbin:latest"
          imagePullPolicy: IfNotPresent
          env:
            - name: var1
              value: abc
            - name: var2
              value: def
            - name: database__usessl
              value: "false"
            - name: database__provider
              value: postgres
            - name: database__server
              valueFrom:
                secretKeyRef:
                  key: PG_SERVER
                  name: plant-storage-postgres-secret
            - name: database__databasename
              valueFrom:
                secretKeyRef:
                  key: PG_DB
                  name: plant-storage-postgres-secret
            - name: database__username
              valueFrom:
                secretKeyRef:
                  key: PG_USER
                  name: plant-storage-postgres-secret
            - name: database__password
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_PASSWORD
                  name: plant-storage-postgres-secret
            
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: asset-registry-eventstore-volume
              mountPath: /credentials/asset-registry-eventstore
            - name: asset-registry-viewcache-volume
              mountPath: /credentials/asset-registry-viewcache
            - name: service-secrets
              mountPath: /secrets

          resources:
            {}
            
      volumes:
      - name: asset-registry-eventstore-volume
        secret:
          secretName: asset-registry-eventstore-secrets
        
      - name: asset-registry-viewcache-volume
        secret:
          secretName: asset-registry-viewcache-secrets
        
      - name: service-secrets
        secret:
          secretName: cascade-secrets
        

---
# Source: example-consumer/charts/platform-service/templates/authorizationPolicy.yaml

apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: httpbin
  namespace: cascade
 spec:
 action: ALLOW
 rules:
 - from:
   - source:
     principals: [sleep]
 - from:
   - source:
     principals: [httpbin]

---
# Source: example-consumer/charts/platform-service/templates/destinationrules.yaml

apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: release-name-httpbin-destinationrule
spec:
  host: httpbin
  trafficPolicy:
    loadBalancer:
      simple: RANDOM
    tls:
      mode: ISTIO_MUTUAL

---
# Source: example-consumer/charts/platform-service/templates/network-policy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: httpbin-network-policy
  namespace: cascade
spec:
  podSelector:
    matchLabels:
      app: httpbin
      version: v1
  policyTypes:
    - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          istio: pilot
      namespaceSelector:
        matchLabels:
          istio-operator-managed: Reconcile
  - from:
    - podSelector:
        matchLabels:
          istio: ingressgateway
      namespaceSelector:
        matchLabels:
          istio-operator-managed: Reconcile
  - from:
    - podSelector:
        matchLabels:
          app: sleep
    ports:
    - protocol: TCP
      port: 80      

---
# Source: example-consumer/charts/platform-service/templates/peerAuthentication.yaml

apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: httpbin
  namespace: cascade
spec:
  mtls:
    mode: STRICT

---
# Source: example-consumer/charts/platform-service/templates/requestAuthentication.yaml
apiVersion: security.istio.io/v1beta1
kind: RequestAuthentication
metadata:
 name: httpbin
 namespace: cascade
spec:
  selector:
    matchLabels:
      app: httpbin
      version: v1
  jwtRules:
  - issuer: "https://sts.windows.net/.../"
    jwksUri: "https://login.microsoftonline.com/common/discovery/keys"
    audiences: ["aud-1234-5678"]

---
# Source: example-consumer/charts/platform-service/templates/jwt-policy.yaml


---
# Source: example-consumer/charts/platform-service/templates/virtualservice.yaml
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: httpbin
spec:
  hosts:
  - httpbin

  http:
  - route:
    - destination:
        host: "httpbin"
    retries:
      attempts: 3
      perTryTimeout: 2s

---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: httpbin-external
spec:
  hosts:
  - "*"
  gateways:
  - gateway/one-gateway
  http:
  # redirect on prefixes without trailing slashes
  - match:
    - uri:
        exact: /httpbin
    redirect:
      uri: /httpbin/
  # routes to service
  - route:
    - destination:
        host: "httpbin"
    match:
    - uri:
        prefix: /httpbin/
    rewrite:
      uri: /
    # deprecated
    headers:
      request:
        add:
          x-appname: httpbin
    retries:
      attempts: 3
      perTryTimeout: 2s

